

//Name:Gautam Patwa
//Reg.No:11704054

#include <stdio.h>
struct Process
{
	int id;
	int arrivaltime;
	int bursttime;
	char terminated;
	int rt;
	int ct;
	int tat;
	int wt;
};

struct  Process p[50];
int total;
int remain;
int cputime = 0;


void displayProcess()
{
	printf("********************************************************************************");
	printf("ID\tAT\tBT\tCT\tTAT\tWT\n\n");
	int i;
	for(i=0 ; i<total ; i++)
    {
		printf("%d\t%d\t%d\t%d\t%d\t%d\n", p[i].id, p[i].arrivaltime, p[i].bursttime, p[i].ct, p[i].tat, p[i].wt);
		printf("\n");
	}
}

void executeInRR()
{
	int i;
	for(i =0 ; i < total ; i++)
    {
		if(p[i].rt <= 2)
        {
			cputime += p[i].rt;
			p[i].rt = 0;
			p[i].terminated = 'y';
			p[i].ct = cputime;
			p[i].tat = p[i].ct - p[i].arrivaltime;
			p[i].wt = p[i].tat - p[i].bursttime;
			remain --;
		}
		else{
			p[i].rt -= 2;
			cputime += 2;
		}
	}
}

int minBurstTime()
{
	int i = 0;
	int pos = -1;
	while( i < total){
		if(p[i].terminated != 'y')
        {
			pos = i;
			break;
		}
		i++;
	}
	for( ; i < total ; i++)
    {
		if(p[i].terminated != 'y' && p[i].bursttime < p[pos].bursttime)
			pos = i;
	}
	return pos;
}

void executeInSRTF()
{
	int index;
	while(1)
    {
		index = minBurstTime();
		if(index == -1)
			break;
		if(p[index].arrivaltime > cputime)
        {
			cputime = p[index].arrivaltime;
		}
		cputime += p[index].rt;				
		p[index].rt = 0;
		p[index].terminated = 'y';
		p[index].ct = cputime;
		p[index].tat = p[index].ct - p[index].arrivaltime;
		 p[index].wt = p[index].tat - p[index].bursttime;
	}	
	
}

void selectionSort()
{
	struct Process temp;
	int pos;
	int i;
	for( i = 0 ; i < total ; i++)
    {
		pos = i;
		int j;
		for(j = i ; j < total ; j++)
        {
			if(p[j].arrivaltime < p[pos].arrivaltime)
				pos = j;
		}
		temp = p[pos];
		p[pos] = p[i];
		p[i] = temp;
	}                       
	cputime += p[0].arrivaltime;
}

int main()
{
    printf("Enter number of Processes : ");
	scanf("%d", &total);
	remain = total - 1;
	int i;
	
    for(i = 0 ; i < total ; i++)
    {
		printf("Process ID:%d\n", i+1);
		scanf("%d", &p[i].id);
		printf("Arrival time : " );
		scanf("%d", &p[i].arrivaltime);
		printf("Burst time : ");
		scanf("%d", &p[i].bursttime);
        printf("\n");
		p[i].terminated = 'n';
		p[i].rt = p[i].bursttime;
	}
	
	selectionSort();
	executeInRR();
	executeInSRTF();	
	displayProcess();		

}